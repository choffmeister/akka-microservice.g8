akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = none
    }

    kryo {
      type = graph
      idstrategy = default
      use-manifests = false
      post-serialization-transformations = lz4
    }
  }

  remote {
    netty.tcp {
      hostname = 127.0.0.1
      port = 2551
    }

    log-remote-lifecycle-events = on
  }

  cluster {
    seed-nodes = [
      "akka.tcp://$actorSystemName$@127.0.0.1:2551"
    ]

    auto-down-unreachable-after = off
    metrics.enabled = off
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension\$"]
}

cassandra-journal {
  contact-points = ["127.0.0.1"]
  port = 9042
  keyspace = "$cassandraKeySpace$"
}

cassandra-snapshot-store {
  contact-points = ["127.0.0.1"]
  port = 9042
  keyspace = "$cassandraKeySpace$-snapshot"
}

http {
  interface = "0.0.0.0"
  port = 8080
  base-url = "http://localhost:8080/api"
}

json-web-token {
  secret = "c2VjcmV0"
  realm = "$httpRealm$"
  issuer = "$httpTokenIssuer$"
  life-time = 30s
}
